<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<configuration>
	<property>
	  <name>hive.metastore.warehouse.dir</name>
	  <value>/user/hive/warehouse</value>
	</property>
	<property>
	  <name>javax.jdo.option.ConnectionURL</name>
	  <value>jdbc:mysql://192.168.202.89:3306/hive?createDatabaseIfNotExist=true&amp;characterEncoding=utf8</value>
	  <description>JDBC connect string for a JDBC metastore</description>
	</property>
	<property>
	  <name>javax.jdo.option.ConnectionDriverName</name>
	  <value>com.mysql.jdbc.Driver</value>
	  <description>Driver class name for a JDBC metastore</description>
	</property>
	<property>
	  <name>javax.jdo.option.ConnectionUserName</name>
	  <value>root</value>
	  <description>username to use against metastore database</description>
	</property>
	<property>
	  <name>javax.jdo.option.ConnectionPassword</name>
	  <value>123456</value>
	  <description>password to use against metastore database</description>
	</property>
	<property>
		<name>hive.exec.max.dynamic.partitions</name>
		<value>4096</value>
		<description>Maximum number of dynamic partitions allowed to be created in total.</description>
	</property>
	<property>
		<name>hive.exec.max.dynamic.partitions.pernode</name>
		<value>1024</value>
		<description>Maximum number of dynamic partitions allowed to be created in each mapper/reducer node.</description>
	</property>
	<property>
		<name>hive.cli.errors.ignore</name>
		<value>true</value>
		<description/>
	</property>
	<property>
		<name>hive.cli.print.current.db</name>
		<value>true</value>
		<description>Whether to include the current database in the Hive prompt.</description>
	</property>
	<!--<property>
	  <name>hive.aux.jars.path</name>
	  <value>file:///data/soft/hive/lib/hbase-0.94.27.jar,file:///data/soft/hive/lib/hive-hbase-handler-0.12.0.jar,file:///data/soft/hive/lib/zookeeper-3.4.5.jar,file:///data/soft/hive/auxlib/json-serde-1.1.7.jar</value>
	</property>-->
	<!--
	<property>
		<name>hive.server2.thrift.port</name>
		<value>10000</value>
	</property>  
	<property>
		<name>hive.server2.thrift.bind.host</name>
		<value>master</value>
	</property>
	<property>
		<name>hive.server2.authentication</name>
		<value>KERBEROS</value>
		<description>
			Client authentication types.
			NONE: no authentication check
			LDAP: LDAP/AD based authentication
			KERBEROS: Kerberos/GSSAPI authentication
			CUSTOM: Custom authentication provider
			(Use with property hive.server2.custom.authentication.class)
		</description>
	</property>
	<property>
		<name>hive.server2.authentication.kerberos.principal</name>
		<value>hadoop/_HOST@DIANPING.COM</value>
	</property>
	<property>
		<name>hive.server2.authentication.kerberos.keytab</name>
		<value>/etc/hadoop.keytab</value>
	</property>
	<property>
		<name>hive.server2.enable.doAs</name>
		<value>true</value>
	</property> 
-->
	<!--
	<property>
                <name>hbase.zookeeper.quorum</name>
                <value>dn01.boyaa.com,dn02.boyaa.com,dn03.boyaa.com</value>
                <description>Comma separated list of servers in the ZooKeeper Quorum. For example, "host1.mydomain.com,host2.mydomain.com,host3.mydomain.com". By default this is set to localhost for local and pseudo-distributed modes of operation. For a fully-distributed setup, this should be set to a full list of ZooKeeper quorum servers. If HBASE_MANAGES_ZK is set in hbase-env.sh this is the list of servers which we will start/stop ZooKeeper on.</description>
        </property>
	<property>
		<name>hive.merge.mapredfiles</name>
		<value>true</value>
		<description>Merge small files at the end of a map-reduce job</description>
	</property>
	<property>
		<name>hive.merge.mapfiles</name>
		<value>true</value>
		<description>Merge small files at the end of a map-only job</description>
	</property>
	<property>  
		<name>hive.exec.compress.output</name>  
		<value>true</value>  
		<description>This controls whether the final outpus of a query(  to a local/hdfs file or a Hive table) is compressed.The compression codec and other options are determined from hadoop config variables mared.output.compress*</description>  
	</property>
	<property>
		<name>hive.exec.compress.intermediate</name>
		<value>true</value>
		<description> This controls whether intermediate files produced by hive between multiple map-reduce jobs are compressed. The compression codec and other options are determined from hadoop config variables mapred.output.compress* </description>
	</property>
	<property>
		<name>hive.auto.convert.join</name>
		<value>true</value>
	</property>
	<property>
		<name>hive.auto.convert.join.noconditionaltask</name>
		<value>true</value>
	</property>
	<property>
		<name>hive.auto.convert.join.noconditionaltask.size</name>
		<value>10000</value>
	</property>
		<property>
		<name>hive.enforce.bucketing</name>
		<value>true</value>
		<description>Whether bucketing is enforced. If true, while inserting into the table, bucketing is enforced. </description>
	</property>

	<property>
		<name>hive.enforce.sorting</name>
		<value>true</value>
		<description>Whether sorting is enforced. If true, while inserting into the table, sorting is enforced. </description>
	</property>
	<property>
		<name>io.sort.mb</name>
		<value>512</value>
	</property>
	<property>
		<name>hive.cli.print.header</name>
		<value>true</value>
	</property>
	-->
	<!--<property>
		<name>hive.security.authorization.enabled</name>
		<value>true</value>
	</property>
	<property>
                <name>hive.security.authorization.createtable.owner.grants</name>
                <value>ALL</value>
        </property>-->
</configuration>
